if (self.CavalryLogger) { CavalryLogger.start_js(["WKJCt"]); }

__d("InsightsCurrencyNamesStatic",["fbt"],(function(a,b,c,d,e,f,g){e.exports={AED:g._("United Arab Emirates Dirham"),AFN:g._("Afghan Afghani"),ALL:g._("Albanian Lek"),AMD:g._("Armenian Dram"),ANG:g._("Netherlands Antillean Guilder"),AOA:g._("Angolan Kwanza"),ARS:g._("Argentine Peso"),AUD:g._("Australian Dollar"),AWG:g._("Aruban Florin"),AZN:g._("Azerbaijani New Manat"),BAM:g._("Bosnia-Herzegovina Convertible Mark"),BBD:g._("Barbadian Dollar"),BDT:g._("Bangladeshi Taka"),BGN:g._("Bulgarian Lev"),BHD:g._("Bahraini Dinar"),BIF:g._("Burundian Franc"),BMD:g._("Bermudan Dollar"),BND:g._("Brunei Dollar"),BOB:g._("Bolivian Boliviano"),BRL:g._("Brazilian Real"),BSD:g._("Bahamian Dollar"),BTN:g._("Bhutanese Ngultrum"),BWP:g._("Botswanan Pula"),BYR:g._("Belarusian Ruble"),BZD:g._("Belize Dollar"),CAD:g._("Canadian Dollar"),CDF:g._("Congolese Franc"),CHF:g._("Swiss Franc"),CLP:g._("Chilean Peso"),CNY:g._("Chinese Yuan"),COP:g._("Colombian Peso"),CRC:g._("Costa Rican Col\u00f3n"),CUC:g._("Cuban Convertible Peso"),CUP:g._("Cuban Peso"),CVE:g._("Cape Verdean Escudo"),CZK:g._("Czech Koruna"),DJF:g._("Djiboutian Franc"),DKK:g._("Danish Krone"),DOP:g._("Dominican Peso"),DZD:g._("Algerian Dinar"),EGP:g._("Egyptian Pound"),ERN:g._("Eritrean Nakfa"),ETB:g._("Ethiopian Birr"),EUR:g._("Euro"),FJD:g._("Fijian Dollar"),FKP:g._("Falkland Islands Pound"),GBP:g._("British Pound"),GEL:g._("Georgian Lari"),GGP:g._("Guernsey Pound"),GHS:g._("Ghanaian Cedi"),GIP:g._("Gibraltar Pound"),GMD:g._("Gambian Dalasi"),GNF:g._("Guinean Franc"),GTQ:g._("Guatemalan Quetzal"),GYD:g._("Guyanaese Dollar"),HKD:g._("Hong Kong Dollar"),HNL:g._("Honduran Lempira"),HRK:g._("Croatian Kuna"),HTG:g._("Haitian Gourde"),HUF:g._("Hungarian Forint"),IDR:g._("Indonesian Rupiah"),ILS:g._("Israeli New Shekel"),IMP:g._("Manx Pound"),INR:g._("Indian Rupee"),IQD:g._("Iraqi Dinar"),IRR:g._("Iranian Rial"),ISK:g._("Icelandic Kr\u00f3na"),JEP:g._("Jersey Pound"),JMD:g._("Jamaican Dollar"),JOD:g._("Jordanian Dinar"),JPY:g._("Japanese Yen"),KES:g._("Kenyan Shilling"),KGS:g._("Kyrgystani Som"),KHR:g._("Cambodian Riel"),KMF:g._("Comorian Franc"),KPW:g._("North Korean Won"),KRW:g._("South Korean Won"),KWD:g._("Kuwaiti Dinar"),KYD:g._("Cayman Islands Dollar"),KZT:g._("Kazakhstani Tenge"),LAK:g._("Laotian Kip"),LBP:g._("Lebanese Pound"),LKR:g._("Sri Lankan Rupee"),LRD:g._("Liberian Dollar"),LSL:g._("Lesotho Loti"),LTL:g._("Lithuanian Litas"),LVL:g._("Latvian Lats"),LYD:g._("Libyan Dinar"),MAD:g._("Moroccan Dirham"),MDL:g._("Moldovan Leu"),MGA:g._("Malagasy Ariary"),MKD:g._("Macedonian Denar"),MMK:g._("Burmese Kyat"),MNT:g._("Mongolian Tugrik"),MOP:g._("Macanese Pataca"),MRO:g._("Mauritanian Ouguiya"),MUR:g._("Mauritian Rupee"),MVR:g._("Maldivian Rufiyaa"),MWK:g._("Malawian Kwacha"),MXN:g._("Mexican Peso"),MYR:g._("Malaysian Ringgit"),MZN:g._("Mozambican Metical"),NAD:g._("Namibian Dollar"),NGN:g._("Nigerian Naira"),NIO:g._("Nicaraguan C\u00f3rdoba"),NOK:g._("Norwegian Krone"),NPR:g._("Nepalese Rupee"),NZD:g._("New Zealand Dollar"),OMR:g._("Omani Rial"),PAB:g._("Panamanian Balboa"),PEN:g._("Peruvian Nuevo Sol"),PGK:g._("Papua New Guinean Kina"),PHP:g._("Philippine Peso"),PKR:g._("Pakistani Rupee"),PLN:g._("Polish Z\u0142oy"),PYG:g._("Paraguayan Guaran\u00ed"),QAR:g._("Qatari Rial"),RON:g._("Romanian Leu"),RSD:g._("Serbian Dinar"),RUB:g._("Russian Ruble"),RWF:g._("Rwandan Franc"),SAR:g._("Saudi Riyal"),SBD:g._("Solomon Islands Dollar"),SCR:g._("Seychellois Rupee"),SDG:g._("Sudanese Pound"),SEK:g._("Swedish Krona"),SGD:g._("Singapore Dollar"),SHP:g._("St. Helena Pound"),SLL:g._("Sierra Leonean Leone"),SOS:g._("Somali Shilling"),SRD:g._("Surinamese Dollar"),STD:g._("S\u00e3o Tom\u00e9 and Pr\u00ecncipe Dobra"),SVC:g._("Salvadoran Col\u00f3n"),SYP:g._("Syrian Pound"),SZL:g._("Swazi Lilangeni"),THB:g._("Thai Baht"),TJS:g._("Tajikistani Somoni"),TMT:g._("Turkmenistani Manat"),TND:g._("Tunisian Dinar"),TOP:g._("Tongan Pa\u02bbnga"),TRY:g._("Turkish Lira"),TTD:g._("Trinidad and Tobago Dollar"),TVD:g._("Tuvaluan Dollar"),TWD:g._("New Taiwan Dollar"),TZS:g._("Tanzanian Shilling"),UAH:g._("Ukrainian Hryvnia"),UGX:g._("Ugandan Shilling"),USD:g._("US Dollar"),UYU:g._("Uruguayan Peso"),UZS:g._("Uzbekistan Som"),VEF:g._("Venezuelan Bol\u00edvar"),VND:g._("Vietnamese Dong"),VUV:g._("Vanuatu Vatu"),WST:g._("Samoan T\u0101l\u0101"),XAF:g._("Central African CFA Franc"),XCD:g._("East Caribbean Dollar"),XOF:g._("West African CFA Franc"),XPF:g._("CFP Franc"),YER:g._("Yemeni Rial"),ZAR:g._("South African Rand"),ZMW:g._("Zambian Kwacha"),ZWD:g._("Zimbabwean Dollar")}}),null);
__d("InsightsLocaleNamesStatic",["fbt"],(function(a,b,c,d,e,f,g){e.exports={af_ZA:g._("Afrikaans"),ar_AE:g._("Arabic (United Arab Emirates)"),ar_AR:g._("Arabic"),ar_BH:g._("Arabic (Bahrain)"),ar_DJ:g._("Arabic (Djibouti)"),ar_DZ:g._("Arabic (Algeria)"),ar_EG:g._("Arabic (Egypt)"),ar_EH:g._("Arabic (Western Sahara)"),ar_ER:g._("Arabic (Eritrea)"),ar_IL:g._("Arabic (Israel)"),ar_IQ:g._("Arabic (Iraq)"),ar_JO:g._("Arabic (Jordan)"),ar_KM:g._("Arabic (Comoros)"),ar_KW:g._("Arabic (Kuwait)"),ar_LB:g._("Arabic (Lebanon)"),ar_LY:g._("Arabic (Libya)"),ar_MA:g._("Arabic (Morocco)"),ar_MR:g._("Arabic (Mauritania)"),ar_OM:g._("Arabic (Oman)"),ar_PS:g._("Arabic (Palestinian Territories)"),ar_QA:g._("Arabic (Qatar)"),ar_SA:g._("Arabic (Saudi Arabia)"),ar_SD:g._("Arabic (Sudan)"),ar_SO:g._("Arabic (Somalia)"),ar_SS:g._("Arabic (South Sudan)"),ar_SY:g._("Arabic (Syria)"),ar_TD:g._("Arabic (Chad)"),ar_TN:g._("Arabic (Tunisia)"),ar_US:g._("Arabic (US)"),ar_YE:g._("Arabic (Yemen)"),ay_BO:g._("Aymara"),az_AZ:g._("Azerbaijani"),be_BY:g._("Belarusian"),bg_BG:g._("Bulgarian"),bn_IN:g._("Bengali"),bs_BA:g._("Bosnian"),ca_ES:g._("Catalan"),ck_US:g._("Cherokee"),cs_CZ:g._("Czech"),cx_PH:g._("Cebuano"),cy_GB:g._("Welsh"),da_DK:g._("Danish"),de_AT:g._("German (Austria)"),de_CH:g._("German (Switzerland)"),de_DE:g._("German"),el_GR:g._("Greek"),en_AD:g._("English (Andorra)"),en_AE:g._("English (United Arab Emirates)"),en_AG:g._("English (Antigua & Barbuda)"),en_AI:g._("English (Anguilla)"),en_AL:g._("English (Albania)"),en_AS:g._("English (American Samoa)"),en_AT:g._("English (Austria)"),en_AU:g._("English (Australia)"),en_BA:g._("English (Bosnia & Herzegovina)"),en_BB:g._("English (Barbados)"),en_BE:g._("English (Belgium)"),en_BM:g._("English (Bermuda)"),en_BR:g._("English (Brazil)"),en_BS:g._("English (Bahamas)"),en_BW:g._("English (Botswana)"),en_BZ:g._("English (Belize)"),en_CA:g._("English (Canada)"),en_CC:g._("English (Cocos [Keeling] Islands)"),en_CH:g._("English (Switzerland)"),en_CK:g._("English (Cook Islands)"),en_CM:g._("English (Cameroon)"),en_CX:g._("English (Christmas Island)"),en_CY:g._("English (Cyprus)"),en_CZ:g._("English (Czech Republic)"),en_DE:g._("English (Germany)"),en_DG:g._("English (Diego Garcia)"),en_DK:g._("English (Denmark)"),en_DM:g._("English (Dominica)"),en_EE:g._("English (Estonia)"),en_EG:g._("English (Egypt)"),en_ER:g._("English (Eritrea)"),en_ES:g._("English (Spain)"),en_FI:g._("English (Finland)"),en_FJ:g._("English (Fiji)"),en_FK:g._("English (Falkland Islands)"),en_FM:g._("English (Micronesia)"),en_FR:g._("English (France)"),en_GB:g._("English (UK)"),en_GD:g._("English (Grenada)"),en_GG:g._("English (Guernsey)"),en_GH:g._("English (Ghana)"),en_GI:g._("English (Gibraltar)"),en_GM:g._("English (Gambia)"),en_GR:g._("English (Greece)"),en_GU:g._("English (Guam)"),en_GY:g._("English (Guyana)"),en_HK:g._("English (Hong Kong SAR China)"),en_HR:g._("English (Croatia)"),en_HU:g._("English (Hungary)"),en_ID:g._("English (Indonesia)"),en_IE:g._("English (Ireland)"),en_IL:g._("English (Israel)"),en_IM:g._("English (Isle of Man)"),en_IN:g._("English (India)"),en_IO:g._("English (British Indian Ocean Territory)"),en_IS:g._("English (Iceland)"),en_IT:g._("English (Italy)"),en_JE:g._("English (Jersey)"),en_JM:g._("English (Jamaica)"),en_JP:g._("English (Japan)"),en_KE:g._("English (Kenya)"),en_KI:g._("English (Kiribati)"),en_KN:g._("English (St. Kitts & Nevis)"),en_KR:g._("English (Korea)"),en_KW:g._("English (Kuwait)"),en_KY:g._("English (Cayman Islands)"),en_LB:g._("English (Lebanon)"),en_LC:g._("English (St. Lucia)"),en_LR:g._("English (Liberia)"),en_LS:g._("English (Lesotho)"),en_LT:g._("English (Lithuania)"),en_LU:g._("English (Luxembourg)"),en_LV:g._("English (Latvia)"),en_ME:g._("English (Montenegro)"),en_MG:g._("English (Madagascar)"),en_MH:g._("English (Marshall Islands)"),en_MO:g._("English (Macau SAR China)"),en_MP:g._("English (Northern Mariana Islands)"),en_MS:g._("English (Montserrat)"),en_MT:g._("English (Malta)"),en_MU:g._("English (Mauritius)"),en_MW:g._("English (Malawi)"),en_MX:g._("English (Mexico)"),en_MY:g._("English (Malaysia)"),en_NA:g._("English (Namibia)"),en_NF:g._("English (Norfolk Island)"),en_NG:g._("English (Nigeria)"),en_NL:g._("English (Netherlands)"),en_NO:g._("English (Norway)"),en_NR:g._("English (Nauru)"),en_NU:g._("English (Niue)"),en_NZ:g._("English (New Zealand)"),en_PG:g._("English (Papua New Guinea)"),en_PH:g._("English (Philippines)"),en_PI:g._("English (Pirate)"),en_PK:g._("English (Pakistan)"),en_PL:g._("English (Poland)"),en_PN:g._("English (Pitcairn Islands)"),en_PR:g._("English (Puerto Rico)"),en_PT:g._("English (Portugal)"),en_PW:g._("English (Palau)"),en_RO:g._("English (Romania)"),en_RU:g._("English (Russia)"),en_RW:g._("English (Rwanda)"),en_SA:g._("English (South Africa)"),en_SB:g._("English (Solomon Islands)"),en_SC:g._("English (Seychelles)"),en_SD:g._("English (Sudan)"),en_SE:g._("English (Sweden)"),en_SG:g._("English (Singapore)"),en_SH:g._("English (St. Helena)"),en_SI:g._("English (Slovenia)"),en_SK:g._("English (Slovakia)"),en_SL:g._("English (Sierra Leone)"),en_SS:g._("English (South Sudan)"),en_SX:g._("English (Sint Maarten)"),en_SZ:g._("English (Swaziland)"),en_TC:g._("English (Turks & Caicos Islands)"),en_TH:g._("English (Thailand)"),en_TK:g._("English (Tokelau)"),en_TO:g._("English (Tonga)"),en_TR:g._("English (Turkey)"),en_TT:g._("English (Trinidad & Tobago)"),en_TV:g._("English (Tuvalu)"),en_TZ:g._("English (Tanzania)"),en_UD:g._("English (Upside Down)"),en_UG:g._("English (Uganda)"),en_UM:g._("English (U.S. Outlying Islands)"),en_US:g._("English (US)"),en_VC:g._("English (St. Vincent & Grenadines)"),en_VG:g._("English (British Virgin Islands)"),en_VI:g._("English (U.S. Virgin Islands)"),en_VU:g._("English (Vanuatu)"),en_WS:g._("English (Samoa)"),en_ZA:g._("English (South Africa)"),en_ZM:g._("English (Zambia)"),en_ZW:g._("English (Zimbabwe)"),eo_EO:g._("Esperanto"),es_AR:g._("Spanish (Argentina)"),es_BO:g._("Spanish (Bolivia)"),es_CL:g._("Spanish (Chile)"),es_CO:g._("Spanish (Colombia)"),es_CR:g._("Spanish (Costa Rica)"),es_CU:g._("Spanish (Cuba)"),es_DO:g._("Spanish (Dominican Republic)"),es_EA:g._("Spanish (Ceuta & Melilla)"),es_EC:g._("Spanish (Ecuador)"),es_ES:g._("Spanish (Spain)"),es_GQ:g._("Spanish (Equatorial Guinea)"),es_GT:g._("Spanish (Guatemala)"),es_HN:g._("Spanish (Honduras)"),es_IC:g._("Spanish (Canary Islands)"),es_LA:g._("Spanish"),es_MX:g._("Spanish (Mexico)"),es_NI:g._("Spanish (Nicaragua)"),es_PA:g._("Spanish (Panama)"),es_PE:g._("Spanish (Peru)"),es_PH:g._("Spanish (Philippines)"),es_PR:g._("Spanish (Puerto Rico)"),es_PY:g._("Spanish (Paraguay)"),es_SV:g._("Spanish (El Salvador)"),es_US:g._("Spanish (United States)"),es_UY:g._("Spanish (Uruguay)"),es_VE:g._("Spanish (Venezuela)"),et_EE:g._("Estonian"),eu_ES:g._("Basque"),fa_IR:g._("Persian"),fb_LT:g._("Leet Speak"),fi_FI:g._("Finnish"),fo_FO:g._("Faroese"),fr_BE:g._("French (Belgium)"),fr_BF:g._("French (Burkina Faso)"),fr_BI:g._("French (Burundi)"),fr_BJ:g._("French (Benin)"),fr_BL:g._("French (St. Barthlemy)"),fr_CA:g._("French (Canada)"),fr_CD:g._("French (Congo - Kinshasa)"),fr_CF:g._("French (Central African Republic)"),fr_CG:g._("French (Congo - Brazzaville)"),fr_CH:g._("French (Switzerland)"),fr_CI:g._("French (Cote d'Ivoire)"),fr_CM:g._("French (Cameroon)"),fr_DJ:g._("French (Djibouti)"),fr_DZ:g._("French (Algeria)"),fr_FR:g._("French (France)"),fr_GA:g._("French (Gabon)"),fr_GF:g._("French (French Guiana)"),fr_GN:g._("French (Guinea)"),fr_GP:g._("French (Guadeloupe)"),fr_GQ:g._("French (Equatorial Guinea)"),fr_HT:g._("French (Haiti)"),fr_KM:g._("French (Comoros)"),fr_LU:g._("French (Luxembourg)"),fr_MA:g._("French (Morocco)"),fr_MC:g._("French (Monaco)"),fr_MF:g._("French (St. Martin)"),fr_MG:g._("French (Madagascar)"),fr_ML:g._("French (Mali)"),fr_MQ:g._("French (Martinique)"),fr_MR:g._("French (Mauritania)"),fr_MU:g._("French (Mauritius)"),fr_NC:g._("French (New Caledonia)"),fr_NE:g._("French (Niger)"),fr_PF:g._("French (French Polynesia)"),fr_PM:g._("French (St. Pierre & Miquelon)"),fr_RE:g._("French (La Reunion)"),fr_RW:g._("French (Rwanda)"),fr_SC:g._("French (Seychelles)"),fr_SN:g._("French (Senegal)"),fr_SY:g._("French (Syria)"),fr_TD:g._("French (Chad)"),fr_TG:g._("French (Togo)"),fr_TN:g._("French (Tunisia)"),fr_VU:g._("French (Vanuatu)"),fr_WF:g._("French (Wallis & Futuna)"),fr_YT:g._("French (Mayotte)"),fy_NL:g._("Frisian"),ga_IE:g._("Irish"),gl_ES:g._("Galician"),gn_PY:g._("Guarani"),gu_IN:g._("Gujarati"),gx_GR:g._("Classical Greek"),he_IL:g._("Hebrew"),hi_IN:g._("Hindi"),hr_HR:g._("Croatian"),hu_HU:g._("Hungarian"),hy_AM:g._("Armenian"),id_ID:g._("Indonesian"),is_IS:g._("Icelandic"),it_IT:g._("Italian"),iw_IL:g._("Hebrew (Israel)"),ja_JP:g._("Japanese"),ja_KS:g._("Japanese (Japan Kansai)"),jv_ID:g._("Javanese"),ka_GE:g._("Georgian"),kk_KZ:g._("Kazakh"),km_KH:g._("Khmer"),kn_IN:g._("Kannada"),ko_KR:g._("Korean"),ku_TR:g._("Kurdish"),la_VA:g._("Latin"),li_NL:g._("Limburgish"),lt_LT:g._("Lithuanian"),lv_LV:g._("Latvian"),mg_MG:g._("Malagasy"),mk_MK:g._("Macedonian"),ml_IN:g._("Malayalam"),mn_MN:g._("Mongolian"),mr_IN:g._("Marathi"),ms_MY:g._("Malay"),mt_MT:g._("Maltese"),nb_NO:g._("Norwegian (Bokmal)"),ne_NP:g._("Nepali"),nl_BE:g._("Dutch (Belgium)"),nl_NL:g._("Dutch"),nn_NO:g._("Norwegian (Nynorsk)"),pa_IN:g._("Punjabi"),pl_PL:g._("Polish"),ps_AF:g._("Pashto"),pt_BR:g._("Portuguese (Brazil)"),pt_PT:g._("Portuguese (Portugal)"),qu_PE:g._("Quechua"),rm_CH:g._("Romansh"),ro_RO:g._("Romanian"),ru_BY:g._("Russian (Belarus)"),ru_KZ:g._("Russian (Kazakhstan)"),ru_RU:g._("Russian"),ru_UA:g._("Russian (Ukraine)"),sa_IN:g._("Sanskrit"),se_NO:g._("Northern Sami"),sk_SK:g._("Slovak"),sl_SI:g._("Slovenian"),so_SO:g._("Somali"),sq_AL:g._("Albanian"),sr_RS:g._("Serbian"),sv_SE:g._("Swedish"),sw_KE:g._("Swahili"),sy_SY:g._("Syriac"),ta_IN:g._("Tamil"),te_IN:g._("Telugu"),tg_TJ:g._("Tajik"),th_TH:g._("Thai"),tl_PH:g._("Filipino"),tl_ST:g._("Klingon"),tr_TR:g._("Turkish"),tt_RU:g._("Tatar"),uk_UA:g._("Ukrainian"),ur_PK:g._("Urdu"),uz_UZ:g._("Uzbek"),vi_VN:g._("Vietnamese"),xh_ZA:g._("Xhosa"),yi_DE:g._("Yiddish"),zh_CN:g._("Simplified Chinese (China)"),zh_HK:g._("Traditional Chinese (Hong Kong)"),zh_TW:g._("Traditional Chinese (Taiwan)"),zu_ZA:g._("Zulu")}}),null);
__d("XAYMTMultiTipAsyncClickController",["XController"],(function(a,b,c,d,e,f){e.exports=b("XController").create("/ads/growth/aymt/multi_async_click/",{tip_id:{type:"String"},channel_id:{type:"String"},aymt_data:{type:"String"},target:{type:"String",required:!0},handled_delete:{type:"Bool",defaultValue:!0},extra_data:{type:"String"}})}),null);
__d("AYMTMultiTipLogger",["cx","AsyncRequest","Event","React","ReactDOM","XAYMTMultiTipAsyncClickController","XUISpinner.react","$"],(function(a,b,c,d,e,f,g){a={init:function(a,c,d,e,f){b("Event").listen(a,"click",this.simplyHideAndLog.bind(this,c,d,e,f))},simplyHideAndLog:function(a,c,d,e){d!==null&&b("ReactDOM").render(b("React").createElement(b("XUISpinner.react"),{className:"_5kvq",size:"large"}),b("$")(d));d=b("XAYMTMultiTipAsyncClickController").getURIBuilder().setString("aymt_data",JSON.stringify(a)).setString("target",c);e!==null&&d.setString("extra_data",e);new(b("AsyncRequest"))(d.getURI()).send()}};e.exports=a}),null);
__d("AdsTimeUtils",["fbt","DateConsts"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h={isTheSameMinute:function(a,b){if(!a||!b)return a===b;a=h._getTimeStampRoundedToMinutes(a);b=h._getTimeStampRoundedToMinutes(b);return a===b},_getTimeStampRoundedToMinutes:function(a){return a.getTime()-a.getSeconds()*b("DateConsts").MS_PER_SEC-a.getMilliseconds()},dateUTCTruncate:function(a){return new Date(Date.UTC(a.getFullYear(),a.getMonth(),a.getDate()))},getDifferenceInDays:function(a,c){a=Math.abs(a-c);return Math.ceil(a/b("DateConsts").MS_PER_DAY)},dateStringToSeconds:function(a){if(h.isNumberLike(a))return+a;else return Date.parse(a)/1e3},isNumberLike:function(a){return!isNaN(+a)},secondsToString:function(a){var c=Math.floor(a/b("DateConsts").SEC_PER_HOUR),d=Math.floor((a-c*b("DateConsts").SEC_PER_HOUR)/b("DateConsts").SEC_PER_MIN);a=a-d*b("DateConsts").SEC_PER_MIN-c*b("DateConsts").SEC_PER_HOUR;a<10&&(a="0"+a);c&&d<10&&(d="0"+d);var e=g._("{minutes}:{seconds}",[g._param("minutes",d),g._param("seconds",a)]);c&&(e=g._("{hours}:{minutes}:{seconds}",[g._param("hours",c),g._param("minutes",d),g._param("seconds",a)]));return e}};e.exports=h}),null);
__d("FBTraceIDsForFailedGraphAPIRequests",[],(function(a,b,c,d,e,f){var g=[];function a(a){g.push(a)}b={errorFBTraces:g,insert:a};e.exports=b}),null);
__d("GraphAPIPerfLogging",["ApiClient","ResourceTimingsStore","ResourceTypes"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g=new Map();function a(){b("ApiClient").subscribe("request.prepare",h),b("ApiClient").subscribe("request.complete",i),b("ApiClient").subscribe("request.error",i)}function h(a,c,d){a=b("ResourceTimingsStore").getUID(b("ResourceTypes").XHR,a);g.set(d,a);b("ResourceTimingsStore").annotate(b("ResourceTypes").XHR,a).addStringAnnotation("request_name",c._reqName).addStringAnnotation("request_source",c._reqSrc).addStringAnnotation("request_method",c.method);b("ResourceTimingsStore").measureRequestSent(b("ResourceTypes").XHR,a)}function i(a,c,d,e,f,h){a=g.get(h);a&&(g["delete"](h),b("ResourceTimingsStore").measureResponseReceived(b("ResourceTypes").XHR,a),b("ResourceTimingsStore").annotate(b("ResourceTypes").XHR,a).addStringAnnotation("fbtrace_id",e.__fb_trace_id__||""))}e.exports={register:a}}),null);
__d("GraphAPIPreloadingOnlyMode",[],(function(a,b,c,d,e,f){"use strict";var g=window.location.search.indexOf("preloadingonly")>-1;a={disable:function(){g=!1},enable:function(){g=!0},isEnabled:function(){return g}};e.exports=a}),null);
__d("RequestProcessorBase",["abstractMethod"],(function(a,b,c,d,e,f){"use strict";function a(a){this.runRequest=a}a.prototype.scheduleRequest=function(a,c){return b("abstractMethod")("RequestProcessorBase","scheduleRequest")};e.exports=a}),null);
__d("RequestProcessorDefault",["RequestProcessorBase"],(function(a,b,c,d,e,f){"use strict";var g;g=babelHelpers.inherits(a,b("RequestProcessorBase"));g&&g.prototype;a.prototype.scheduleRequest=function(a,b){this.runRequest(a,b)};function a(){g.apply(this,arguments)}e.exports=a}),null);
__d("adsPostBatchingExperiment",["gkx"],(function(a,b,c,d,e,f){"use strict";function a(){return!b("gkx")("AT5BnvZQjPnrM7wQJbxCjmog4uCrZ3lUU3VSOSSt1XAO0s1GvzyJXQrgjs_S9uLHs_Rfgxckd_itOivVcBTJpOAt")?b("gkx")("AT4PVIH99CeDcaM0w1zYHLQlyemYNFU3L6ybCgEb5zGAtbvFz8G7-BVYAa3dmK6QwAvXFWe0hUcwGdJ1oZYVjwMF")?"only_draft":"control":b("gkx")("AT4PVIH99CeDcaM0w1zYHLQlyemYNFU3L6ybCgEb5zGAtbvFz8G7-BVYAa3dmK6QwAvXFWe0hUcwGdJ1oZYVjwMF")?"all":"only_ads"}e.exports=a}),null);
__d("getErrorFromAPIResponse",[],(function(a,b,c,d,e,f){"use strict";function a(a){if(!a)return{message:"Unknown error (empty response)",code:0,type:"http"};if(a.error)return a.error;return a.error_code&&a.error_msg?{message:a.error_msg,code:a.error_code,type:a.error_type,error_subcode:a.error_subcode}:undefined}e.exports=a}),null);
__d("preloadedGraphAPIUtils",["areEqual"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g={isSubsetOf:function(a,c){var d=c,e=a;if(b("areEqual")(e,d))return!0;if(!e||!d)return!1;c=Object.keys(d).every(function(a){return!!e[a]});return!c?!1:Object.keys(e).every(function(a){return a==="fields"?g.isFieldsSubsetOf(e.fields,d.fields):b("areEqual")(e[a],d[a])})},isFieldsSubsetOf:function(a,c){__p&&__p();var d=c;c=a;if(b("areEqual")(c,d))return!0;if(!c||!d)return!1;if(typeof c==="string")return c===d;return Array.isArray(c)?c.every(function(a){return d.includes(a)}):!1}};e.exports=g}),null);
__d("preloadedGraphAPI",["invariant","Promise","GraphAPIConfig","preloadedGraphAPIUtils","sdk.URI"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h=new(b("sdk.URI"))(window.location.href).getQueryData().preloadingdebug||new(b("sdk.URI"))(window.location.href).getQueryData().preloadingonly,i=["locale","_reqName","_reqSrc","session_scenario_id"],j=.01;function a(a){__p&&__p();a.preloadInfo||g(0,undefined);var c=a.preloadInfo,d=c.asyncData,e=c.isScenarioOngoing;if(!e()||!b("GraphAPIConfig").ads_interfaces_server_backed_dd)return a.go();d.onError(function(b){p("ADS_INTERFACES_PRELOADING_ISSUE","ERROR_LOADING_PRELOADED_DATA",a,b)});var f;d.onLoaded(function(a){f=a});if(f)return k(a,f);p("ADS_INTERFACES_PRELOADING_ISSUE","SERVER_DIDNT_BEAT_JS_EXECUTION",a);var h=a.go(),i;return b("Promise").race([new(b("Promise"))(function(b){d.onLoaded(function(c){i=c,b(k(a,c,h))})}),h.then(function(b){i==null&&p("ADS_INTERFACES_PRELOADING_ISSUE","SERVER_DIDNT_BEAT_API",a);return b})]).then(function(b){e()||p("ADS_INTERFACES_PRELOADING_ISSUE","UNNECESSARY_SERVER_PRELOADING",a,b);return b})}function k(a,c,d){var e=l(a,c);if(e){p("ADS_INTERFACES_PRELOADING_SUCCESS","PRELOAD_HIT",a,c);return b("Promise").resolve(e)}p("ADS_INTERFACES_PRELOADING_ISSUE","SERVER_DIDNT_SEND_ALL_NECESSARY_DATA",a,c);return d?d:a.go()}function l(a,c){__p&&__p();var d=q(a);if(c[d])return c[d];var e=n(a),f=Object.keys(c);d=function(){__p&&__p();var a=f[g],d=m(a);if(e.path!==d.path||e.method!==d.method||!b("preloadedGraphAPIUtils").isSubsetOf(e.params,d.params)||c[a].error!=null)return"continue";var h=e.ids,i=d.ids;if(h==null&&i==null)return{v:c[a]};if(h==null||i==null)return"continue";if(!h.every(function(a){return i.indexOf(a)!==-1}))return"continue";if(e.isForSingleID&&d.isForSingleID)return{v:c[a]};if(e.isForSingleID)return{v:babelHelpers["extends"]({__fb_trace_id__:c[a].__fb_trace_id__},c[a][h[0]])};if(d.isForSingleID){d=c[a];var j=d.__fb_trace_id__;d=babelHelpers.objectWithoutProperties(d,["__fb_trace_id__"]);return{v:(j={__fb_trace_id__:j},j[i[0]]=d,j)}}var k={__fb_trace_id__:c[a].__fb_trace_id__};h.forEach(function(b){return k[b]=c[a][b]});return{v:k}};for(var g=0;g<f.length;g++){a=d();switch(a){case"continue":continue;default:if(typeof a==="object")return a.v}}return null}function m(a){var b=a.indexOf("/"),c=a.indexOf("{"),d=a.substring(0,b);b=a.substring(b,c);a=a.substring(c);c=JSON.parse(a);a=c.ids;c=babelHelpers.objectWithoutProperties(c,["ids"]);return o({ids:a,params:c,path:b,method:d})}function n(a){var b=a.path,c=a.method;a=babelHelpers["extends"]({},a.params);for(var d=0;d<i.length;d++){var e=i[d];delete a[e]}e=a.ids;d=babelHelpers.objectWithoutProperties(a,["ids"]);return o({ids:e,params:d,path:b,method:c})}function o(a){__p&&__p();var b=a.params,c=a.path,d=a.ids;a=a.method;var e=c.replace(/(\/v\d\.\d\/)\d*\/?$/,"$1"),f=!1;if(d==null&&e!==c){f=!0;var g=c.replace(/\/v\d\.\d\/(\d*)\/?$/,"$1");d=g;c=e}typeof d==="string"&&(d=d.split(","));b&&b.fields&&b.fields.sort&&b.fields.sort();if(b!=null){g=Object.keys(b);for(var e=0;e<g.length;e++){var h=g[e];b[h]==null&&delete b[h]}}return{ids:d,isForSingleID:f,params:b,path:c,method:a}}function p(a,b,c,d){(h||b==="SERVER_DIDNT_SEND_ALL_NECESSARY_DATA")&&!1;var e={api_request_source:c.source,call_name:c.name,endpoint:c.path,error_type:b};Math.random()<=j&&(e.search_query=q(c),e.field_names=b==="SERVER_DIDNT_SEND_ALL_NECESSARY_DATA"?Object.keys(d||{}):null);c.preloadInfo.log(e,a)}function c(a){switch(a){case"SERVER_DIDNT_SEND_ALL_NECESSARY_DATA":return"\n          Graph API call is not being preloaded by AdsPreloader as declared!\n          Notice that the server and client queries are matched based on their\n          parameters, so look out for any parameter or path difference between\n          client and server queries.\n        ";case"SERVER_DIDNT_BEAT_JS_EXECUTION":return"\n          The server query that preloads this Graph API call didn't respond\n          before the callsite in JavaScript executed.\n        ";case"SERVER_DIDNT_BEAT_API":return"\n          The server query that preloads this Graph API call didn't respond\n          before the actual API call, so it was not useful whatsoever.\n        ";case"UNNECESSARY_SERVER_PRELOADING":return"\n          The AdsPreloader query that is meant to preload this request finished\n          after the given scenario was concluded. This means this API call might\n          not be needed for the scenario at hand, and thus the preloading could\n          be removed.\n        ";case"ERROR_LOADING_PRELOADED_DATA":return"\n          There was an error in the execution of the AdsPreloader query that\n          backs this Graph API call.\n        ";case"PRELOAD_HIT":return"\n          Preloaded data was successfully used by client query.\n        "}return g(!1,"switch-case is exhaustive")}function q(a){__p&&__p();var b=a.path,c=babelHelpers["extends"]({},a.params);for(var d=0;d<i.length;d++){var e=i[d];delete c[e]}e=Object.keys(c);for(var d=0;d<e.length;d++){var f=e[d];c[f]==null&&delete c[f]}f=a.method+b+JSON.stringify(c);return f}e.exports=a}),null);
__d("GraphAPICore",["errorCode","invariant","Promise","ApiClient","FBLogger","FBTraceIDsForFailedGraphAPIRequests","GraphAPIPerfLogging","GraphAPIPreloadingOnlyMode","RequestProcessorDefault","UrlMap","adsPostBatchingExperiment","emptyFunction","getErrorFromAPIResponse","gkx","mixInEventEmitter","performanceNow","preloadedGraphAPI","promiseDone","sdk.URI","setTimeout","sprintf"],(function(a,b,c,d,e,f,g,h){"use strict";__p&&__p();var i=500,j=960,k=window.location.href.indexOf("nobatch")>-1,l=!1,m=[],n=null,o=1,p,q=s(b("RequestProcessorDefault"));function a(c){var d=c.method+":"+c.name,e=c.error,f=e&&(e.error_user_msg||e.message)||"Unknown error",a=e.code||"";e.error_subcode&&(a+="."+e.error_subcode);return b("sprintf")("%s%s | (%s) %s | URI: %s%s",c.source?c.source+" | ":"",d,a,f,c.path,c.api_fbtrace_id?" | fbtrace: "+c.api_fbtrace_id:"")}function c(a){m.push(a)}function r(a){return m.some(function(b){return b(a)})}function d(a){a>=1||h(0,undefined),o=a}function f(a){a&&p&&b("FBLogger")("graph_api").warn("You are replacing an active response injector!"),p=a}function g(){l=!0}function a(){l=!1}function s(a){q instanceof b("RequestProcessorDefault")||a===b("RequestProcessorDefault")||h(0,undefined);q=new a(w);return q}function t(){q=s(b("RequestProcessorDefault"))}function u(a,c){__p&&__p();if(p){var d=p(a);if(d){b("setTimeout")(function(){return c(d.response)},d.latency||0);return}}if(a.preloadInfo!=null){b("promiseDone")(b("preloadedGraphAPI")(babelHelpers["extends"]({},a,{go:function(){return new(b("Promise"))(function(b){return q.scheduleRequest(a,b)})}})),c);return}q.scheduleRequest(a,c)}function v(a){if(a.method==="get")return!1;switch(b("adsPostBatchingExperiment")()){case"all":return!0;case"only_ads":return a.path.includes("ad");case"only_draft":return a.path.includes("draft");case"control":default:return!1}}function w(a,c){if(b("GraphAPIPreloadingOnlyMode").isEnabled()){b("FBLogger")("graph_api").info("Attempted and canceled API request for a %s, options: %s",a.preloadInfo&&a.preloadInfo.isScenarioOngoing()?"critical request":"non-critical request",JSON.stringify(a));return}!a.batched&&(!l||r(a))||v(a)||k?b("ApiClient").graph(a.path,a.method,a.params,c):b("ApiClient").scheduleBatchCall(a.path,a.method,a.params,c)}function x(a,c){__p&&__p();c===void 0&&(c=1);var d=b("performanceNow")();n&&!a.priority&&(a.priority=n);return new(b("Promise"))(function(e,f){__p&&__p();a.params=babelHelpers["extends"]({},a.params,{_reqName:a.name});a.source&&(a.params._reqSrc=a.source);if(c<1||c>a.max_attempts){f(B({error:1,error_subcode:1357005}));return}u(a,function(g){__p&&__p();if(g===!0&&(a.method==="post"||a.method==="delete")){var h=!0;e(h);return}h=b("getErrorFromAPIResponse")(g);var j=g?g.__fb_trace_id__:undefined,k=babelHelpers["extends"]({},a,{api_fbtrace_id:j,attempt:c,request_time:Math.round(b("performanceNow")()-d),start_time:d});if(h){var l=babelHelpers["extends"]({},k,{error:h});c<a.max_attempts&&(y(h)||a.canRetry)?(b("setTimeout")(function(){e(x(a,c+1))},Math.pow(2,c-1)*i),J.emit("retry",l)):(j&&b("FBTraceIDsForFailedGraphAPIRequests").insert(j),H(a.params)||J.emit("error",l),f(B(h)))}else A(a,g),g&&delete g.__fb_trace_id__,e(g),J.emit("success",k)})})}function y(a){if(a.is_transient)return!0;if(a.error_subcode===1357045)return!0;if(!a.code)return!0;return a.code===j?!0:!1}function z(a,c){if(c){var d=new(b("sdk.URI"))(c);return function(){return D(a.name,d.getPath(),d.getQueryData(),!1,a.source)}}}function A(a,c){if(Array.isArray(c)||!c.paging)return;if(c.paging.next){var d=a.params;d=d&&d.after&&c.paging.cursors&&d.after===c.paging.cursors.after;d?b("FBLogger")("graph_api").mustfix("[%s] Next page is the same as the current page! This should never happen. Ignoring the next page URL. Please report an API bug!",a.name):c.next=z(a,c.paging.next)}d=z(a,c.paging.previous);d&&(c.previous=d)}function B(a){var b=new Error(a.message);Object.assign(b,a);return b}function C(a,b,c,d,e,f,g){return x({batched:d,canRetry:!1,max_attempts:1,method:"delete",name:a,params:c,path:b,source:e,preloadInfo:f,priority:g})}function D(a,b,c,d,e,f,g,h){h===void 0&&(h=!1);return x({batched:d,canRetry:h,max_attempts:o,method:"get",name:a,params:c,path:b,source:e,preloadInfo:f,priority:g})}function E(a,b,c,d,e,f,g,h){h===void 0&&(h=!1);return x({batched:d,canRetry:h,max_attempts:h?o:1,method:"post",name:a,params:c,path:b,source:e,preloadInfo:f,priority:g})}function F(a,c,d){__p&&__p();var e=new(b("sdk.URI"))(b("UrlMap").resolve("graph")).setPath(c).setQueryData({access_token:b("ApiClient").getAccessToken(),suppress_http_code:1}).toString();return new(b("Promise"))(function(f,g){__p&&__p();var h=new XMLHttpRequest();h.open("POST",e,!0);h.setRequestHeader("X-Requested-With","XMLHttpRequest");h.onload=function(){var e;try{e=JSON.parse(h.responseText)}catch(a){g(new Error("Invalid JSON: "+h.responseText));return}var i=b("getErrorFromAPIResponse")(e);i?(g(B(i)),J.emit("error",{name:a,path:c,method:"POST",params:d,error:i})):f(e)};h.send(d)})}function G(a,c){c={batch:c.map(function(a){var c=a.request;c.params instanceof FormData&&h(0,undefined);var d=b("ApiClient").prepareBatchParams([c.path,c.method,c.params,function(){}]),e=d.body;d=d.relative_url;return{name:a.name,method:c.method,body:e,relative_url:d,omit_response_on_success:!1}})};return E(a,"/",c,!1)}function H(a){return!!(a&&a.execution_options&&a.execution_options.some(function(a){return a==="validate_only"}))}function I(a,b){n=a,b(),n=null}var J={blacklist:c,disableBatching:a,enableBatching:g,runInSpecifiedPriority:I,promiseBatch:G,promiseDelete:C,promiseGet:D,promisePost:E,promisePostFormData:F,disableDefaultErrorHandler:function(){return K&&K.remove()},disableDefaultRetryLogHandler:function(){return L&&L.remove()},registerProcessor:s,resetRequestProcessor:t,setMaxAPIRequestAttempts:d,setResponseInjector:f,addListener:b("emptyFunction"),emit:b("emptyFunction"),listeners:b("emptyFunction").thatReturnsArgument([])};b("mixInEventEmitter")(J,{error:!0,retry:!0,success:!0});var K=J.addListener("error",function(a){return!1}),L=J.addListener("retry",function(a){});b("GraphAPIPerfLogging").register();e.exports=J}),null);
__d("GraphAPIRequestSpec",["invariant","CurrentLocale","GraphAPICore"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();var h,i,j;function c(a,b,c,d,e,f,g){this.name=a,this.path=b,this.params=c,this.batch=d,this.source=e,this.preloadInfo=f,this.priority=g,this.canRetry=!1}c.prototype.preloadedBy=function(a,b){var c=b.isScenarioOngoing;b=b.log;this.preloadInfo={asyncData:a,isScenarioOngoing:c,log:b};return this};c.prototype.batched=function(){this.batch=!0;return this};c.prototype.setPriority=function(a){this.priority=a;return this};c.prototype.retriable=function(){this.canRetry=!0;return this};d=babelHelpers.inherits(k,c);h=d&&d.prototype;function k(a,b,c,d,e,f){h.constructor.call(this,a,b,c,!1,d,e,f)}k.prototype.clone=function(){var a=new k(this.name,this.path,this.params,this.source,this.preloadInfo,this.priority);return this.batch?a.batched():a};k.prototype.declareOnly=function(){return new l(this)};k.prototype.get=function(a){return this.declareOnly().get(a).go()};k.prototype.post=function(a){return this.declareOnly().post(a).go()};k.prototype.remove=function(a){return this.declareOnly().remove(a).go()};f=babelHelpers.inherits(l,c);i=f&&f.prototype;function l(a){i.constructor.call(this,a.name,a.path,a.params,a.batch,a.source,a.preloadInfo,a.priority)}l.prototype.get=function(a){a=this.$SemideclaredGraphAPIRequestSpec1(a);return new m(this,a,"get")};l.prototype.post=function(b){b&&a.FormData&&b instanceof a.FormData?b=this.$SemideclaredGraphAPIRequestSpec2(b):b=this.$SemideclaredGraphAPIRequestSpec1(b);return new m(this,b,"post")};l.prototype.remove=function(a){a=this.$SemideclaredGraphAPIRequestSpec1(a);return new m(this,a,"delete")};l.prototype.$SemideclaredGraphAPIRequestSpec1=function(a){return babelHelpers["extends"]({locale:b("CurrentLocale").get()},this.params,a)};l.prototype.$SemideclaredGraphAPIRequestSpec2=function(a){a.append("locale",b("CurrentLocale").get());var c=this.params;if(c)for(var d in c)Object.prototype.hasOwnProperty.call(c,d)&&a.append(d,c[d]);return a};d=babelHelpers.inherits(m,c);j=d&&d.prototype;function m(a,b,c){j.constructor.call(this,a.name,a.path,b,a.batch,a.source,a.preloadInfo,a.priority),this.method=c}m.prototype.go=function(){__p&&__p();var a=this.params,c=this.method;if(a instanceof FormData){c==="post"||g(0,undefined);return b("GraphAPICore").promisePostFormData(this.name,this.path,a,this.batch,this.source,this.preloadInfo,this.priority)}a||g(0,undefined);switch(c){case"get":return b("GraphAPICore").promiseGet(this.name,this.path,a,this.batch,this.source,this.preloadInfo,this.priority,this.canRetry);case"post":return b("GraphAPICore").promisePost(this.name,this.path,a,this.batch,this.source,this.preloadInfo,this.priority,this.canRetry);case"delete":return b("GraphAPICore").promiseDelete(this.name,this.path,a,this.batch,this.source,this.preloadInfo,this.priority)}g(0,undefined)};e.exports=k}),null);
__d("GraphAPIRequestSpecPotentialEdge",["GraphAPIRequestSpec"],(function(a,b,c,d,e,f){"use strict";var g;g=babelHelpers.inherits(a,b("GraphAPIRequestSpec"));g&&g.prototype;a.prototype.edge=function(a){return new(b("GraphAPIRequestSpec"))(this.name+"/"+a,this.path+"/"+a,this.params,this.source)};function a(){g.apply(this,arguments)}e.exports=a}),null);
__d("isValidID",[],(function(a,b,c,d,e,f){"use strict";function a(a){return!!/^\d+(_\d+)?$/.test(a)}e.exports=a}),null);
__d("isValidVanityURI",[],(function(a,b,c,d,e,f){"use strict";function a(a){return!!/^[\dA-Z\._\-]+$/i.test(a)}e.exports=a}),null);
__d("NamedJSONPathExpression",[],(function(a,b,c,d,e,f){__p&&__p();function a(a){"use strict";this.$1=a,this.$2=new g()}a.prototype.prop=function(a){"use strict";this.$2.prop(a);return this};a.prototype.toString=function(){"use strict";return"{result="+this.$1+":"+String(this.$2)+"}"};a.prototype.valueOf=function(){"use strict";return this.toString()};function g(){"use strict";this.$1="$"}g.prototype.prop=function(a){"use strict";this.$1+="."+a;return this};g.prototype.toString=function(){"use strict";return this.$1};g.prototype.valueOf=function(){"use strict";return this.toString()};e.exports=a}),null);
__d("runGraphAPIBatch_EXPERIMENTAL",["invariant","GraphAPICore","NamedJSONPathExpression","guid"],(function(a,b,c,d,e,f,g){"use strict";__p&&__p();function a(a,c){__p&&__p();var d=new Map(),e=new Map();c.forEach(function(a){__p&&__p();if(!a.request){var c=a;d.get(c)==null||g(0,undefined);d.set(c,b("guid")());e.set(c,c)}else{var f=a;Array.isArray(f.dependencies)||g(0,undefined);f.request.length===f.dependencies.length||g(0,undefined);d.set(f.request,b("guid")());c=f.dependencies.map(function(a){a=d.get(a);a||g(0,undefined,f);return new(b("NamedJSONPathExpression"))(a)});e.set(f.request,f.request.apply(f,c))}});return b("GraphAPICore").promiseBatch(a,c.map(function(b){b.request&&(b=b.request);var a=d.get(b);b=e.get(b);a&&b||g(0,undefined);return{name:a,request:b}})).then(function(a){return a.map(function(a){return!a||!a.body?{success:!1,noBatchDataReturned:!0}:JSON.parse(a.body)})})}e.exports=a}),null);
__d("GraphAPI",["FBLogger","GraphAPIConfig","GraphAPICore","GraphAPIRequestSpec","GraphAPIRequestSpecPotentialEdge","TAAL","isValidID","isValidVanityURI","runGraphAPIBatch_EXPERIMENTAL","sdk.safelyParseResponse","sdk.URI"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g="act_";function h(a,b){this.version=a,this.source=b}h.prototype.me=function(){return new(b("GraphAPIRequestSpecPotentialEdge"))("me",this.$1("/me"),null,this.source)};h.prototype.object=function(a,c){this.$2(c);return new(b("GraphAPIRequestSpecPotentialEdge"))("object:"+a,this.$1("/"+c),null,this.source)};h.prototype.objectFromDependentRequest=function(a,c){return new(b("GraphAPIRequestSpecPotentialEdge"))("objectFromDependentRequest:"+a,this.$1("/"+c.prop("id").toString()),null,this.source)};h.prototype.objectsFromDependentRequest=function(a,c){return new(b("GraphAPIRequestSpec"))("objectsFromDependentRequest:"+a,this.$1("/"),{ids:c.prop("data.*.id").toString()},this.source)};h.prototype.objects=function(a,c){c.forEach(function(a){return this.$2(a)}.bind(this));return new(b("GraphAPIRequestSpec"))("objects:"+a,this.$1("/"),{ids:c.join(",")},this.source)};h.prototype.urls=function(a){a.forEach(function(a){return b("sdk.URI").isValidURI(a)});return new(b("GraphAPIRequestSpec"))("urls",this.$1("/"),{ids:a.join(",")},this.source)};h.prototype.objectByName=function(a,c){this.$3(c);return new(b("GraphAPIRequestSpecPotentialEdge"))("objectByName:"+a,this.$1("/"+c),null,this.source)};h.prototype.objectsByName=function(a,c){c.forEach(function(a){return this.$3(a)}.bind(this));return new(b("GraphAPIRequestSpec"))("objectsByName:"+a,this.$1("/"),{ids:c.join(",")},this.source)};h.prototype.adaccount=function(a){this.$2(a);return new(b("GraphAPIRequestSpecPotentialEdge"))("adaccount",this.$1("/"+g+a),null,this.source)};h.prototype.adaccounts=function(a){a.forEach(function(a){return this.$2(a)}.bind(this));return new(b("GraphAPIRequestSpecPotentialEdge"))("adaccounts",this.$1("/"),{ids:g+a.join(","+g)},this.source)};h.prototype.search=function(a){return new(b("GraphAPIRequestSpec"))("search:"+a,this.$1("/search"),{type:a},this.source)};h.prototype.path_DO_NOT_USE=function(a){return new(b("GraphAPIRequestSpec"))("path:"+a,this.$1(a),null,this.source)};h.prototype.root=function(a){return this.objectByName(a,a)};h.prototype.$1=function(a){return"/v"+this.version+a};h.prototype.$2=function(a){if(b("GraphAPIConfig").validateID&&!b("isValidID")(a))throw new Error(b("TAAL").blameToPreviousFile(a+" is not a valid FBID"))};h.prototype.$3=function(a){if(b("GraphAPIConfig").validateID&&!b("isValidVanityURI")(a))throw new Error(b("TAAL").blameToPreviousFile(a+" is not a valid vanity URI"))};function a(a,b){return new h(a,b)}Object.assign(a,{blacklist:b("GraphAPICore").blacklist,disableBatching:b("GraphAPICore").disableBatching,enableBatching:b("GraphAPICore").enableBatching,registerProcessor:b("GraphAPICore").registerProcessor,runBatchExperimental:b("runGraphAPIBatch_EXPERIMENTAL"),setMaxAPIRequestAttempts:b("GraphAPICore").setMaxAPIRequestAttempts,addErrorHandler:function(a){return b("GraphAPICore").addListener("error",a)},addRetryLogHandler:function(a){return b("GraphAPICore").addListener("retry",a)},addSuccessLogHandler:function(a){return b("GraphAPICore").addListener("success",a)},hasCustomErrorHandler:function(){return b("GraphAPICore").listeners("error").length>1}});b("sdk.safelyParseResponse").setErrorHandler(function(a,c,d){__p&&__p();var e="unknown URL";if(d&&d!==null)if(b("sdk.URI").isValidURI(d)){var f=new(b("sdk.URI"))(d);if(Object.prototype.hasOwnProperty.call(f.getQueryData(),"access_token")){var g=f.getQueryData();g.access_token="ACCESS_TOKEN";f.setQueryData(g)}e=f.toString()}else e="invalid URL ("+d+")";b("FBLogger")("graph_api").catching(a).mustfix("Received Invalid JSON reply from %s: %s",e,JSON.stringify(c));return b("sdk.safelyParseResponse").ERROR});e.exports=a}),null);
__d("Cache",["DateConsts","TimeSlice"],(function(a,b,c,d,e,f){"use strict";__p&&__p();function a(){this.$1=new Map()}a.prototype.has=function(a){return this.$1.has(a)};a.prototype.get=function(a,b){a=this.__getRaw(a);return!a?b:a.$2};a.prototype.getAll=function(a,b){var c=new Map();a.forEach(function(a){return c.set(a,this.get(a,b))}.bind(this));return c};a.prototype["delete"]=function(a){var b=this.__getRaw(a);b&&b.$3&&clearTimeout(b.$3);return this.$1["delete"](a)};a.prototype.clear=function(){this.$1.forEach(function(a){a&&a.$3&&clearTimeout(a.$3)}),this.$1.clear()};a.prototype.set=function(a,c,d,e){__p&&__p();if(!this.shouldUpdate(a,d))return!1;var f=this.__getRaw(a);f||(f=this.__getNewRawObject());delete f.$2;delete f.$4;f.$3&&clearTimeout(f.$3);delete f.$3;f.$2=c;d!=null&&(f.$4=d);e!=null&&e>=0&&(f.$3=setTimeout(b("TimeSlice").guard(this["delete"].bind(this,a),"Cache expiration timeout"),e*b("DateConsts").MS_PER_SEC*b("DateConsts").SEC_PER_MIN));this.__setRaw(a,f);return!0};a.prototype.shouldUpdate=function(a,b){a=this.__getRaw(a);return a==null||a.$4==null||b==null||b>a.$4};a.prototype.size=function(){return this.$1.size};a.prototype.__getRaw=function(a){return this.$1.get(a)};a.prototype.__setRaw=function(a,b){this.$1.set(a,b)};a.prototype.__getNewRawObject=function(){return{$2:null,$3:null,$4:null,$5:null,$6:null}};a.prototype.__keys=function(){return this.$1.keys()};e.exports=a}),null);
__d("LFUCache",["Cache","DateConsts"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g,h=15,i=1;c=babelHelpers.inherits(a,b("Cache"));g=c&&c.prototype;function a(a,b){g.constructor.call(this),this.$LFUCache2=a&&a>0?a:h,this.$LFUCache3=b&&b>0?b:i,this.$LFUCache4()}a.prototype.$LFUCache4=function(){clearTimeout(this.$LFUCache1),this.$LFUCache1=setTimeout(this.purge.bind(this),this.$LFUCache2*b("DateConsts").SEC_PER_MIN*b("DateConsts").MS_PER_SEC)};a.prototype.destroy=function(){clearTimeout(this.$LFUCache1)};a.prototype.get=function(a,b){this.has(a)&&this.$LFUCache5(a);return g.get.call(this,a,b)};a.prototype.set=function(a,b,c,d){var e=this.has(a);b=g.set.call(this,a,b,c,d);b&&(e?this.$LFUCache5(a):this.$LFUCache6(a,this.$LFUCache3));return b};a.prototype.purge=function(){var a=Array.from(this.__keys());a.forEach(function(a){this.$LFUCache7(a)<this.$LFUCache3?this["delete"](a):this.$LFUCache6(a,0)}.bind(this));this.$LFUCache4()};a.prototype.$LFUCache5=function(a){var b=this.$LFUCache7(a)+1;this.$LFUCache6(a,b);return b};a.prototype.$LFUCache7=function(a){a=this.__getRaw(a);return a&&a.$LFUCache8?a.$LFUCache8:0};a.prototype.$LFUCache6=function(a,b){var c=this.__getRaw(a);c||(c=this.__getNewRawObject());c.$LFUCache8=b;this.__setRaw(a,c);return!0};e.exports=a}),null);
__d("cachedGraphAPI",["LFUCache"],(function(a,b,c,d,e,f){"use strict";__p&&__p();var g=.15,h=new(b("LFUCache"))();function a(a){return new j(a)}function i(a,b,c){return a+":"+b+":"+JSON.stringify(c)}function j(a){this.requestSpec=a,this.$2=undefined}j.prototype.cacheFor=function(a){this.$2=a;return this};j.prototype.clearCache=function(){this.$1=!0;return this};j.prototype.get=function(a){__p&&__p();var b=i(this.requestSpec.name,this.requestSpec.path,Object.assign({},this.requestSpec.params,a));if(!this.$1){var c=h.get(b);if(c)return c}var d=this.requestSpec.get(a)["catch"](function(a){h.set(b,d,null,g);throw a});h.set(b,d,null,this.$2);return d};Object.assign(a,{createCacheKey:i,_cache:h,CACHE_ERROR_FOR:g});e.exports=a}),null);
__d("sumOfArray",[],(function(a,b,c,d,e,f){function a(a){var b=0,c=a.length;for(var d=0;d<c;++d)b+=a[d];return b}e.exports=a}),null);